version: '3.8'

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile.airflow
  environment:
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__WEBSERVER__SECRET_KEY: 'secret_key_here'
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./notebooks:/opt/airflow/notebooks
    - ./data:/opt/airflow/data
    - airflow-data:/opt/airflow
  networks:
    - code-with-deposit
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    networks:
      - code-with-deposit
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      - airflow-webserver
      - airflow-init

  airflow-init:
    <<: *airflow-common
    command: db init
    restart: "no"

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    networks:
      - code-with-deposit
    ports:
      - "8888:8888"
      - "4040-4042:4040-4042"  # Spark UI ports
    volumes:
      - ./notebooks:/opt/airflow/notebooks
      - ./data:/opt/airflow/data
      - ./conf:/opt/spark/conf
    environment:
      - SPARK_HOME=/opt/spark
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_DRIVER_MEMORY=1g
      - SPARK_EXECUTOR_MEMORY=1g
      - PYTHONPATH=/opt/spark/python:/opt/spark/python/lib/py4j-0.10.9.7-src.zip
      - PYSPARK_PYTHON=python3
      - JAVA_HOME=/usr/lib/jvm/temurin-8-jdk-arm64
      - JUPYTER_ENABLE_LAB=yes
    depends_on:
      - spark-master
    hostname: jupyter
    platform: linux/arm64

  spark-master:
    image: bitnami/spark:3.5
    platform: linux/arm64
    networks:
      - code-with-deposit
    environment:
      SPARK_MODE: master
      SPARK_RPC_AUTHENTICATION_ENABLED: no
      SPARK_RPC_ENCRYPTION_ENABLED: no
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
      SPARK_SSL_ENABLED: no
    ports:
      - "8090:8080"
      - "7077:7077"
    volumes:
      - ./data:/data

  spark-worker:
    image: bitnami/spark:3.5
    platform: linux/arm64
    networks:
      - code-with-deposit
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_MEMORY: 1G
      SPARK_WORKER_CORES: 1
      SPARK_RPC_AUTHENTICATION_ENABLED: no
      SPARK_RPC_ENCRYPTION_ENABLED: no
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
      SPARK_SSL_ENABLED: no
    depends_on:
      - spark-master
    volumes:
      - ./data:/data

volumes:
  airflow-data:
  postgres-data: 

networks:
  code-with-deposit:
    driver: bridge 